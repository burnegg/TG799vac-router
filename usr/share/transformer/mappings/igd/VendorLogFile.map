-- Automatically generated from InternetGatewayDevice:1.8
-- using generator version 2.1
local InternetGatewayDevice_DeviceInfo_VendorLogFile_i_ = {
  objectType = {
    name = "InternetGatewayDevice.DeviceInfo.VendorLogFile.{i}.",
    access = "readOnly",
    numEntriesParameter = "VendorLogFileNumberOfEntries",
    minEntries = 0,
    maxEntries = math.huge,
    parameters = {
      Alias = {
        access = "readWrite",
        type = "string",
        max = "64",
      },
      Name = {
        access = "readOnly",
        type = "string",
        max = "64",
      },
      MaximumSize = {
        access = "readOnly",
        type = "unsignedInt",
      },
      Persistent = {
        access = "readOnly",
        type = "boolean",
      },
    }
  }
}

local binding = { config = "system", sectionname = "log", option = "", default = "" }
local uci_helper = mapper("ucihelper")

InternetGatewayDevice_DeviceInfo_VendorLogFile_i_.entries = function(mapping)
  local logs = {}
  binding.sectionname = "log"
  uci_helper.foreach_on_uci(binding, function(s)
    logs[#logs+1] = s['path']
  end)
  return logs
end

InternetGatewayDevice_DeviceInfo_VendorLogFile_i_.get = {
  Alias = function(mapping, param, key)
    binding.sectionname = key
    binding.option = "alias"
    binding.default = "cpe-" .. key
    return uci_helper.get_from_uci(binding)
  end,
  Name = function(mapping, param, key)
    return key
  end,
  MaximumSize = "0",
  Persistent = "0"
}

InternetGatewayDevice_DeviceInfo_VendorLogFile_i_.set = {
  Alias = function(mapping, param, value, key)
    binding.sectionname = key
    binding.option = "alias"
    return uci_helper.set_on_uci(binding, value, commitapply)
  end,
}

InternetGatewayDevice_DeviceInfo_VendorLogFile_i_.commit = function()
  uci_helper.commit(binding)
end

InternetGatewayDevice_DeviceInfo_VendorLogFile_i_.revert = function()
  uci_helper.revert(binding)
end

register(InternetGatewayDevice_DeviceInfo_VendorLogFile_i_)

